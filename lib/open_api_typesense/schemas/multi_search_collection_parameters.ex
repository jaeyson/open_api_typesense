defmodule OpenApiTypesense.MultiSearchCollectionParameters do
  @moduledoc """
  Provides struct and type for a MultiSearchCollectionParameters
  """
  use OpenApiTypesense.Encoder

  @type t :: %__MODULE__{
          cache_ttl: integer,
          collection: String.t(),
          conversation: boolean,
          conversation_id: String.t(),
          conversation_model_id: String.t(),
          drop_tokens_mode: String.t(),
          drop_tokens_threshold: integer,
          enable_overrides: boolean,
          enable_synonyms: boolean,
          enable_typos_for_alpha_numerical_tokens: boolean,
          enable_typos_for_numerical_tokens: boolean,
          exclude_fields: String.t(),
          exhaustive_search: boolean,
          facet_by: String.t(),
          facet_query: String.t(),
          facet_return_parent: String.t(),
          facet_strategy: String.t(),
          filter_by: String.t(),
          filter_curated_hits: boolean,
          group_by: String.t(),
          group_limit: integer,
          group_missing_values: boolean,
          hidden_hits: String.t(),
          highlight_affix_num_tokens: integer,
          highlight_end_tag: String.t(),
          highlight_fields: String.t(),
          highlight_full_fields: String.t(),
          highlight_start_tag: String.t(),
          include_fields: String.t(),
          infix: String.t(),
          limit: integer,
          max_extra_prefix: integer,
          max_extra_suffix: integer,
          max_facet_values: integer,
          min_len_1typo: integer,
          min_len_2typo: integer,
          num_typos: String.t(),
          offset: integer,
          override_tags: String.t(),
          page: integer,
          per_page: integer,
          pinned_hits: String.t(),
          pre_segmented_query: boolean,
          prefix: String.t(),
          preset: String.t(),
          prioritize_exact_match: boolean,
          prioritize_num_matching_fields: boolean,
          prioritize_token_position: boolean,
          q: String.t(),
          query_by: String.t(),
          query_by_weights: String.t(),
          remote_embedding_num_tries: integer,
          remote_embedding_timeout_ms: integer,
          rerank_hybrid_matches: boolean,
          search_cutoff_ms: integer,
          snippet_threshold: integer,
          sort_by: String.t(),
          stopwords: String.t(),
          synonym_num_typos: integer,
          synonym_prefix: boolean,
          text_match_type: String.t(),
          typo_tokens_threshold: integer,
          use_cache: boolean,
          vector_query: String.t(),
          voice_query: String.t(),
          "x-typesense-api-key": String.t()
        }

  defstruct [
    :cache_ttl,
    :collection,
    :conversation,
    :conversation_id,
    :conversation_model_id,
    :drop_tokens_threshold,
    :enable_synonyms,
    :enable_typos_for_alpha_numerical_tokens,
    :exclude_fields,
    :exhaustive_search,
    :facet_by,
    :facet_query,
    :facet_return_parent,
    :facet_strategy,
    :filter_by,
    :filter_curated_hits,
    :group_by,
    :group_limit,
    :group_missing_values,
    :hidden_hits,
    :highlight_affix_num_tokens,
    :highlight_end_tag,
    :highlight_fields,
    :highlight_full_fields,
    :highlight_start_tag,
    :include_fields,
    :infix,
    :limit,
    :max_extra_prefix,
    :max_extra_suffix,
    :max_facet_values,
    :min_len_1typo,
    :min_len_2typo,
    :num_typos,
    :offset,
    :override_tags,
    :page,
    :per_page,
    :pinned_hits,
    :prefix,
    :preset,
    :q,
    :query_by,
    :query_by_weights,
    :remote_embedding_num_tries,
    :remote_embedding_timeout_ms,
    :search_cutoff_ms,
    :snippet_threshold,
    :sort_by,
    :stopwords,
    :synonym_num_typos,
    :synonym_prefix,
    :text_match_type,
    :typo_tokens_threshold,
    :use_cache,
    :vector_query,
    :voice_query,
    :"x-typesense-api-key",
    drop_tokens_mode: "right_to_left",
    enable_overrides: false,
    enable_typos_for_numerical_tokens: true,
    pre_segmented_query: false,
    prioritize_exact_match: true,
    prioritize_num_matching_fields: true,
    prioritize_token_position: false,
    rerank_hybrid_matches: false
  ]

  @doc false
  @spec __fields__(atom) :: keyword
  def __fields__(type \\ :t)

  def __fields__(:t) do
    [
      cache_ttl: :integer,
      collection: {:string, :generic},
      conversation: :boolean,
      conversation_id: {:string, :generic},
      conversation_model_id: {:string, :generic},
      drop_tokens_mode: {:string, :generic},
      drop_tokens_threshold: :integer,
      enable_overrides: :boolean,
      enable_synonyms: :boolean,
      enable_typos_for_alpha_numerical_tokens: :boolean,
      enable_typos_for_numerical_tokens: :boolean,
      exclude_fields: {:string, :generic},
      exhaustive_search: :boolean,
      facet_by: {:string, :generic},
      facet_query: {:string, :generic},
      facet_return_parent: {:string, :generic},
      facet_strategy: {:string, :generic},
      filter_by: {:string, :generic},
      filter_curated_hits: :boolean,
      group_by: {:string, :generic},
      group_limit: :integer,
      group_missing_values: :boolean,
      hidden_hits: {:string, :generic},
      highlight_affix_num_tokens: :integer,
      highlight_end_tag: {:string, :generic},
      highlight_fields: {:string, :generic},
      highlight_full_fields: {:string, :generic},
      highlight_start_tag: {:string, :generic},
      include_fields: {:string, :generic},
      infix: {:string, :generic},
      limit: :integer,
      max_extra_prefix: :integer,
      max_extra_suffix: :integer,
      max_facet_values: :integer,
      min_len_1typo: :integer,
      min_len_2typo: :integer,
      num_typos: {:string, :generic},
      offset: :integer,
      override_tags: {:string, :generic},
      page: :integer,
      per_page: :integer,
      pinned_hits: {:string, :generic},
      pre_segmented_query: :boolean,
      prefix: {:string, :generic},
      preset: {:string, :generic},
      prioritize_exact_match: :boolean,
      prioritize_num_matching_fields: :boolean,
      prioritize_token_position: :boolean,
      q: {:string, :generic},
      query_by: {:string, :generic},
      query_by_weights: {:string, :generic},
      remote_embedding_num_tries: :integer,
      remote_embedding_timeout_ms: :integer,
      rerank_hybrid_matches: :boolean,
      search_cutoff_ms: :integer,
      snippet_threshold: :integer,
      sort_by: {:string, :generic},
      stopwords: {:string, :generic},
      synonym_num_typos: :integer,
      synonym_prefix: :boolean,
      text_match_type: {:string, :generic},
      typo_tokens_threshold: :integer,
      use_cache: :boolean,
      vector_query: {:string, :generic},
      voice_query: {:string, :generic},
      "x-typesense-api-key": {:string, :generic}
    ]
  end
end
